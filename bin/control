#!/bin/bash

source $OPENSHIFT_CARTRIDGE_SDK_BASH

OPENSHIFT_MONIT_PIDFILE=${OPENSHIFT_MONIT_DIR}run/monit.pid
OPENSHIFT_MONITRC=${OPENSHIFT_DATA_DIR}.monitrc

function update_monitrc() {
  (cat ${OPENSHIFT_MONITRC} | envsubst) > /tmp/monitrc.tmp && mv /tmp/monitrc.tmp ${OPENSHIFT_MONITRC}
  chmod 0600 ${OPENSHIFT_MONITRC}
}

function dump_environment() {
  env > ${OPENSHIFT_MONIT_DIR}var/env
}

function start() {
  #if [ -z "${MONIT_ALERT_EMAIL}" ]; then
  #  echo "ERROR: You need to set the MONIT_ALERT_EMAIL before starting monit."
  #  echo "       rhc env set MONIT_ALERT_EMAIL=your@email.com"
  #  echo "       rhc cartridge restart monit -a ${OPENSHIFT_APP_NAME}"
  #  echo
  #else
    echo "Starting monit cartridge"
    if [ ! -f ${OPENSHIFT_MONITRC} ]; then
      echo "ERROR: Unabled to locate ~/.monitrc file."
      exit 1
    fi
    dump_environment  # Save the current 'env' into a file that is later sourced
                      # to monit start/stop scripts
    update_monitrc
    ${OPENSHIFT_MONIT_DIR}bin/monit -c ${OPENSHIFT_MONITRC}
  #fi
}

function stop() {
  if [ -f "${OPENSHIFT_MONIT_PIDFILE}" ]; then
    echo "Stopping monit cartridge"
    kill -15 `cat ${OPENSHIFT_MONIT_PIDFILE}`
  fi
}

function restart() {
    stop
    start
}

function status() {
  return 0
}

function reload() {
    client_result "Reloading monit cart"
    dump_environment
    kill -1 `cat ${OPENSHIFT_MONIT_PIDFILE}`
}

function tidy() {
  echo "ENothing to clean for monit."
}

function slack() {
  if [ -z "${OPENSHIFT_MONIT_SLACK_WEBHOOK}" ]; then
  	echo "No slack webhook defined."
  else
	curl -X POST --data-urlencode 'payload={"channel": "#general", "username": "monit", "text": "$2", "icon_emoji": ":warning:"}' https://hooks.slack.com/services/${OPENSHIFT_MONIT_SLACK_WEBHOOK}
  fi
}

case "$1" in
  start) start ;;
  stop) stop ;;
  restart) restart ;;
  status) status ;;
  reload) reload ;;
  tidy) tidy ;;
  slack) slack ;;
  *) exit 0
esac

